apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-image
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  workspaces:
    - name: ssh-creds
    - name: working-directory
  params:
    - name: image-name
      type: string
      description: Name of the image
    - name: base-template
      type: string
      description: Base template to use for image
      default: rhel9-server-large
    - name: git-branch
      type: string
      description: Git branch to use
      default: main
    - name: image-git-repo
      type: string
      default: git@github.com:ahussey-redhat/ocp-virt-demo.git
      description: Git repository that host's the image build configuration
  tasks:
    - name: clone-image-repository
      taskRef:
        kind: ClusterTask
        name: git-clone
      params:
        - name: url
          value: "$(params.image-git-repo)"
      workspaces:
        - name: output
          workspace: working-directory
        - name: ssh-directory
          workspace: ssh-creds
    - name: create-custom-template-from-base-template
      taskRef:
        kind: ClusterTask
        name: copy-template
      params:
        - name: sourceTemplateName
          value: "$(params.base-template)"
        - name: sourceTemplateNamespace
          value: openshift
        - name: targetTemplateName
          value: "$(params.image-name)"
        - name: targetTemplateNamespace
          value: image-build
        - name: allowReplace
          value: "true"
      runAfter:
        - clone-image-repository
    - name: create-vm-from-template
      taskRef:
        kind: ClusterTask
        name: create-vm-from-template
      params:
        - name: templateName
          value: "$(params.image-name)"
        - name: templateParams
          value:
            - "NAME:$(params.image-name)"
        - name: vmNamespace
          value: image-build
      runAfter:
        - create-custom-template-from-base-template
    - name: stop-vm
      params:
        - name: vmName
          value: "$(params.image-name)"
        - name: stop
          value: "true"
        - name: delete
          value: "false"
      taskRef:
        kind: ClusterTask
        name: cleanup-vm
      runAfter:
        - create-vm-from-template
    - name: customise-vm
      taskRef:
        kind: ClusterTask
        name: disk-virt-customize
      params:
        - name: pvc
          value: "$(params.image-name)"
        - name: customizeCommands
          value: |
            --copy-in /data01/4-image-build:/var/tmp/build
            --run /var/tmp/build/bootstrap.sh
            --selinux-relabel
      workspaces:
        - name: data01
          workspace: working-directory
      runAfter:
        - stop-vm
    - name: sysprep-vm
      taskRef:
        kind: ClusterTask
        name: disk-virt-sysprep
      params:
        - name: pvc
          value: "$(params.image-name)"
      runAfter:
        - customise-vm
